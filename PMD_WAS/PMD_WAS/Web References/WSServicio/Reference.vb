'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace WSServicio
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private HelloWorldOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConEmpl_AccesosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConEmpl_NominaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsXPuestosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListaSecretariasDependenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListaEmpleadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ctr_EdificiosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ctr_AltaEdificiosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidaUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Checada_RegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Checada_CapturaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Checada_UltimaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CveEdifOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Bitacora_emplOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FechaValidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaVehiculosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.PMD_WAS.My.MySettings.Default.PMD_WAS_WSServicio_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event HelloWorldCompleted As HelloWorldCompletedEventHandler
        
        '''<remarks/>
        Public Event ConEmpl_AccesosCompleted As ConEmpl_AccesosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConEmpl_NominaCompleted As ConEmpl_NominaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsXPuestosCompleted As ConsXPuestosCompletedEventHandler
        
        '''<remarks/>
        Public Event ListaSecretariasDependenciaCompleted As ListaSecretariasDependenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event ListaEmpleadosCompleted As ListaEmpleadosCompletedEventHandler
        
        '''<remarks/>
        Public Event Ctr_EdificiosCompleted As Ctr_EdificiosCompletedEventHandler
        
        '''<remarks/>
        Public Event Ctr_AltaEdificiosCompleted As Ctr_AltaEdificiosCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidaUsuarioCompleted As ValidaUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event Checada_RegistroCompleted As Checada_RegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event Checada_CapturaCompleted As Checada_CapturaCompletedEventHandler
        
        '''<remarks/>
        Public Event Checada_UltimaCompleted As Checada_UltimaCompletedEventHandler
        
        '''<remarks/>
        Public Event CveEdifCompleted As CveEdifCompletedEventHandler
        
        '''<remarks/>
        Public Event Bitacora_emplCompleted As Bitacora_emplCompletedEventHandler
        
        '''<remarks/>
        Public Event FechaValidaCompleted As FechaValidaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaVehiculosCompleted As ConsultaVehiculosCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HelloWorld() As String
            Dim results() As Object = Me.Invoke("HelloWorld", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub HelloWorldAsync()
            Me.HelloWorldAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HelloWorldAsync(ByVal userState As Object)
            If (Me.HelloWorldOperationCompleted Is Nothing) Then
                Me.HelloWorldOperationCompleted = AddressOf Me.OnHelloWorldOperationCompleted
            End If
            Me.InvokeAsync("HelloWorld", New Object(-1) {}, Me.HelloWorldOperationCompleted, userState)
        End Sub
        
        Private Sub OnHelloWorldOperationCompleted(ByVal arg As Object)
            If (Not (Me.HelloWorldCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HelloWorldCompleted(Me, New HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConEmpl_Accesos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConEmpl_Accesos(ByVal nomina As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConEmpl_Accesos", New Object() {nomina})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConEmpl_AccesosAsync(ByVal nomina As String)
            Me.ConEmpl_AccesosAsync(nomina, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConEmpl_AccesosAsync(ByVal nomina As String, ByVal userState As Object)
            If (Me.ConEmpl_AccesosOperationCompleted Is Nothing) Then
                Me.ConEmpl_AccesosOperationCompleted = AddressOf Me.OnConEmpl_AccesosOperationCompleted
            End If
            Me.InvokeAsync("ConEmpl_Accesos", New Object() {nomina}, Me.ConEmpl_AccesosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConEmpl_AccesosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConEmpl_AccesosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConEmpl_AccesosCompleted(Me, New ConEmpl_AccesosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConEmpl_Nomina", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConEmpl_Nomina(ByVal nomina As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConEmpl_Nomina", New Object() {nomina})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConEmpl_NominaAsync(ByVal nomina As String)
            Me.ConEmpl_NominaAsync(nomina, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConEmpl_NominaAsync(ByVal nomina As String, ByVal userState As Object)
            If (Me.ConEmpl_NominaOperationCompleted Is Nothing) Then
                Me.ConEmpl_NominaOperationCompleted = AddressOf Me.OnConEmpl_NominaOperationCompleted
            End If
            Me.InvokeAsync("ConEmpl_Nomina", New Object() {nomina}, Me.ConEmpl_NominaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConEmpl_NominaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConEmpl_NominaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConEmpl_NominaCompleted(Me, New ConEmpl_NominaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsXPuestos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsXPuestos(ByVal clave_secr As String, ByVal clave_Depe As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsXPuestos", New Object() {clave_secr, clave_Depe})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsXPuestosAsync(ByVal clave_secr As String, ByVal clave_Depe As String)
            Me.ConsXPuestosAsync(clave_secr, clave_Depe, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsXPuestosAsync(ByVal clave_secr As String, ByVal clave_Depe As String, ByVal userState As Object)
            If (Me.ConsXPuestosOperationCompleted Is Nothing) Then
                Me.ConsXPuestosOperationCompleted = AddressOf Me.OnConsXPuestosOperationCompleted
            End If
            Me.InvokeAsync("ConsXPuestos", New Object() {clave_secr, clave_Depe}, Me.ConsXPuestosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsXPuestosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsXPuestosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsXPuestosCompleted(Me, New ConsXPuestosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListaSecretariasDependencia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListaSecretariasDependencia(ByVal usuario As String, ByVal Passw As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListaSecretariasDependencia", New Object() {usuario, Passw})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListaSecretariasDependenciaAsync(ByVal usuario As String, ByVal Passw As String)
            Me.ListaSecretariasDependenciaAsync(usuario, Passw, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListaSecretariasDependenciaAsync(ByVal usuario As String, ByVal Passw As String, ByVal userState As Object)
            If (Me.ListaSecretariasDependenciaOperationCompleted Is Nothing) Then
                Me.ListaSecretariasDependenciaOperationCompleted = AddressOf Me.OnListaSecretariasDependenciaOperationCompleted
            End If
            Me.InvokeAsync("ListaSecretariasDependencia", New Object() {usuario, Passw}, Me.ListaSecretariasDependenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnListaSecretariasDependenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListaSecretariasDependenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListaSecretariasDependenciaCompleted(Me, New ListaSecretariasDependenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListaEmpleados", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListaEmpleados(ByVal clave_secr As String, ByVal clave_Depe As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListaEmpleados", New Object() {clave_secr, clave_Depe})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListaEmpleadosAsync(ByVal clave_secr As String, ByVal clave_Depe As String)
            Me.ListaEmpleadosAsync(clave_secr, clave_Depe, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListaEmpleadosAsync(ByVal clave_secr As String, ByVal clave_Depe As String, ByVal userState As Object)
            If (Me.ListaEmpleadosOperationCompleted Is Nothing) Then
                Me.ListaEmpleadosOperationCompleted = AddressOf Me.OnListaEmpleadosOperationCompleted
            End If
            Me.InvokeAsync("ListaEmpleados", New Object() {clave_secr, clave_Depe}, Me.ListaEmpleadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnListaEmpleadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListaEmpleadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListaEmpleadosCompleted(Me, New ListaEmpleadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ctr_Edificios", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Ctr_Edificios() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ctr_Edificios", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Ctr_EdificiosAsync()
            Me.Ctr_EdificiosAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Ctr_EdificiosAsync(ByVal userState As Object)
            If (Me.Ctr_EdificiosOperationCompleted Is Nothing) Then
                Me.Ctr_EdificiosOperationCompleted = AddressOf Me.OnCtr_EdificiosOperationCompleted
            End If
            Me.InvokeAsync("Ctr_Edificios", New Object(-1) {}, Me.Ctr_EdificiosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCtr_EdificiosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ctr_EdificiosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ctr_EdificiosCompleted(Me, New Ctr_EdificiosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ctr_AltaEdificios", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Ctr_AltaEdificios(ByVal NombrEdif As String) As String
            Dim results() As Object = Me.Invoke("Ctr_AltaEdificios", New Object() {NombrEdif})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Ctr_AltaEdificiosAsync(ByVal NombrEdif As String)
            Me.Ctr_AltaEdificiosAsync(NombrEdif, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Ctr_AltaEdificiosAsync(ByVal NombrEdif As String, ByVal userState As Object)
            If (Me.Ctr_AltaEdificiosOperationCompleted Is Nothing) Then
                Me.Ctr_AltaEdificiosOperationCompleted = AddressOf Me.OnCtr_AltaEdificiosOperationCompleted
            End If
            Me.InvokeAsync("Ctr_AltaEdificios", New Object() {NombrEdif}, Me.Ctr_AltaEdificiosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCtr_AltaEdificiosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ctr_AltaEdificiosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ctr_AltaEdificiosCompleted(Me, New Ctr_AltaEdificiosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidaUsuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidaUsuario(ByVal Nomina As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ValidaUsuario", New Object() {Nomina})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidaUsuarioAsync(ByVal Nomina As String)
            Me.ValidaUsuarioAsync(Nomina, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidaUsuarioAsync(ByVal Nomina As String, ByVal userState As Object)
            If (Me.ValidaUsuarioOperationCompleted Is Nothing) Then
                Me.ValidaUsuarioOperationCompleted = AddressOf Me.OnValidaUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ValidaUsuario", New Object() {Nomina}, Me.ValidaUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidaUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidaUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidaUsuarioCompleted(Me, New ValidaUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Checada_Registro", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Checada_Registro(ByVal userX As String, ByVal SQL As String, ByVal fechaX As Date, ByVal Empleado As Integer) As Integer
            Dim results() As Object = Me.Invoke("Checada_Registro", New Object() {userX, SQL, fechaX, Empleado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Checada_RegistroAsync(ByVal userX As String, ByVal SQL As String, ByVal fechaX As Date, ByVal Empleado As Integer)
            Me.Checada_RegistroAsync(userX, SQL, fechaX, Empleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Checada_RegistroAsync(ByVal userX As String, ByVal SQL As String, ByVal fechaX As Date, ByVal Empleado As Integer, ByVal userState As Object)
            If (Me.Checada_RegistroOperationCompleted Is Nothing) Then
                Me.Checada_RegistroOperationCompleted = AddressOf Me.OnChecada_RegistroOperationCompleted
            End If
            Me.InvokeAsync("Checada_Registro", New Object() {userX, SQL, fechaX, Empleado}, Me.Checada_RegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnChecada_RegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Checada_RegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Checada_RegistroCompleted(Me, New Checada_RegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Checada_Captura", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Checada_Captura(ByVal userX As String, ByVal SQL As String)
            Me.Invoke("Checada_Captura", New Object() {userX, SQL})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Checada_CapturaAsync(ByVal userX As String, ByVal SQL As String)
            Me.Checada_CapturaAsync(userX, SQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Checada_CapturaAsync(ByVal userX As String, ByVal SQL As String, ByVal userState As Object)
            If (Me.Checada_CapturaOperationCompleted Is Nothing) Then
                Me.Checada_CapturaOperationCompleted = AddressOf Me.OnChecada_CapturaOperationCompleted
            End If
            Me.InvokeAsync("Checada_Captura", New Object() {userX, SQL}, Me.Checada_CapturaOperationCompleted, userState)
        End Sub
        
        Private Sub OnChecada_CapturaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Checada_CapturaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Checada_CapturaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Checada_Ultima", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Checada_Ultima(ByVal Empleado As Integer) As String
            Dim results() As Object = Me.Invoke("Checada_Ultima", New Object() {Empleado})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Checada_UltimaAsync(ByVal Empleado As Integer)
            Me.Checada_UltimaAsync(Empleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Checada_UltimaAsync(ByVal Empleado As Integer, ByVal userState As Object)
            If (Me.Checada_UltimaOperationCompleted Is Nothing) Then
                Me.Checada_UltimaOperationCompleted = AddressOf Me.OnChecada_UltimaOperationCompleted
            End If
            Me.InvokeAsync("Checada_Ultima", New Object() {Empleado}, Me.Checada_UltimaOperationCompleted, userState)
        End Sub
        
        Private Sub OnChecada_UltimaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Checada_UltimaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Checada_UltimaCompleted(Me, New Checada_UltimaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CveEdif", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CveEdif(ByVal Edificio As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CveEdif", New Object() {Edificio})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CveEdifAsync(ByVal Edificio As String)
            Me.CveEdifAsync(Edificio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CveEdifAsync(ByVal Edificio As String, ByVal userState As Object)
            If (Me.CveEdifOperationCompleted Is Nothing) Then
                Me.CveEdifOperationCompleted = AddressOf Me.OnCveEdifOperationCompleted
            End If
            Me.InvokeAsync("CveEdif", New Object() {Edificio}, Me.CveEdifOperationCompleted, userState)
        End Sub
        
        Private Sub OnCveEdifOperationCompleted(ByVal arg As Object)
            If (Not (Me.CveEdifCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CveEdifCompleted(Me, New CveEdifCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bitacora_empl", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Bitacora_empl(ByVal password As String, ByVal edificio As Integer, ByVal tipo As Integer, ByVal Empleado As Integer, ByVal usuario As String) As String
            Dim results() As Object = Me.Invoke("Bitacora_empl", New Object() {password, edificio, tipo, Empleado, usuario})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Bitacora_emplAsync(ByVal password As String, ByVal edificio As Integer, ByVal tipo As Integer, ByVal Empleado As Integer, ByVal usuario As String)
            Me.Bitacora_emplAsync(password, edificio, tipo, Empleado, usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Bitacora_emplAsync(ByVal password As String, ByVal edificio As Integer, ByVal tipo As Integer, ByVal Empleado As Integer, ByVal usuario As String, ByVal userState As Object)
            If (Me.Bitacora_emplOperationCompleted Is Nothing) Then
                Me.Bitacora_emplOperationCompleted = AddressOf Me.OnBitacora_emplOperationCompleted
            End If
            Me.InvokeAsync("Bitacora_empl", New Object() {password, edificio, tipo, Empleado, usuario}, Me.Bitacora_emplOperationCompleted, userState)
        End Sub
        
        Private Sub OnBitacora_emplOperationCompleted(ByVal arg As Object)
            If (Not (Me.Bitacora_emplCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Bitacora_emplCompleted(Me, New Bitacora_emplCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FechaValida", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FechaValida(ByVal Empleado As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("FechaValida", New Object() {Empleado})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FechaValidaAsync(ByVal Empleado As Integer)
            Me.FechaValidaAsync(Empleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FechaValidaAsync(ByVal Empleado As Integer, ByVal userState As Object)
            If (Me.FechaValidaOperationCompleted Is Nothing) Then
                Me.FechaValidaOperationCompleted = AddressOf Me.OnFechaValidaOperationCompleted
            End If
            Me.InvokeAsync("FechaValida", New Object() {Empleado}, Me.FechaValidaOperationCompleted, userState)
        End Sub
        
        Private Sub OnFechaValidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.FechaValidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FechaValidaCompleted(Me, New FechaValidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaVehiculos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaVehiculos(ByVal usuario As String, ByVal Passw As String, ByVal clave_secr As String, ByVal clave_depe As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaVehiculos", New Object() {usuario, Passw, clave_secr, clave_depe})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaVehiculosAsync(ByVal usuario As String, ByVal Passw As String, ByVal clave_secr As String, ByVal clave_depe As String)
            Me.ConsultaVehiculosAsync(usuario, Passw, clave_secr, clave_depe, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaVehiculosAsync(ByVal usuario As String, ByVal Passw As String, ByVal clave_secr As String, ByVal clave_depe As String, ByVal userState As Object)
            If (Me.ConsultaVehiculosOperationCompleted Is Nothing) Then
                Me.ConsultaVehiculosOperationCompleted = AddressOf Me.OnConsultaVehiculosOperationCompleted
            End If
            Me.InvokeAsync("ConsultaVehiculos", New Object() {usuario, Passw, clave_secr, clave_depe}, Me.ConsultaVehiculosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaVehiculosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaVehiculosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaVehiculosCompleted(Me, New ConsultaVehiculosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub HelloWorldCompletedEventHandler(ByVal sender As Object, ByVal e As HelloWorldCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HelloWorldCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConEmpl_AccesosCompletedEventHandler(ByVal sender As Object, ByVal e As ConEmpl_AccesosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConEmpl_AccesosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConEmpl_NominaCompletedEventHandler(ByVal sender As Object, ByVal e As ConEmpl_NominaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConEmpl_NominaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsXPuestosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsXPuestosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsXPuestosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ListaSecretariasDependenciaCompletedEventHandler(ByVal sender As Object, ByVal e As ListaSecretariasDependenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListaSecretariasDependenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ListaEmpleadosCompletedEventHandler(ByVal sender As Object, ByVal e As ListaEmpleadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListaEmpleadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub Ctr_EdificiosCompletedEventHandler(ByVal sender As Object, ByVal e As Ctr_EdificiosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Ctr_EdificiosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub Ctr_AltaEdificiosCompletedEventHandler(ByVal sender As Object, ByVal e As Ctr_AltaEdificiosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Ctr_AltaEdificiosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ValidaUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ValidaUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidaUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub Checada_RegistroCompletedEventHandler(ByVal sender As Object, ByVal e As Checada_RegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Checada_RegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub Checada_CapturaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub Checada_UltimaCompletedEventHandler(ByVal sender As Object, ByVal e As Checada_UltimaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Checada_UltimaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub CveEdifCompletedEventHandler(ByVal sender As Object, ByVal e As CveEdifCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CveEdifCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub Bitacora_emplCompletedEventHandler(ByVal sender As Object, ByVal e As Bitacora_emplCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Bitacora_emplCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub FechaValidaCompletedEventHandler(ByVal sender As Object, ByVal e As FechaValidaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FechaValidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsultaVehiculosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaVehiculosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaVehiculosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
